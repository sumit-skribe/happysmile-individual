name: Release Docker image and generate deployment manifests
on: push

jobs:
  release-docker:
    name: Building docker image
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DigitalOcean Container Registry
        uses: docker/login-action@v2
        with:
          registry: registry.digitalocean.com
          username: ${{ secrets.DIGITAL_OCEAN_USERNAME }}
          password: ${{ secrets.DIGITAL_OCEAN_PASSWORD }}

      - name: Get git SHA short
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: registry.digitalocean.com/searchcombat/happysmile-individual:sha-${{ env.sha_short }}
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Generate deploy manifest from Jinja template
        uses: cuchi/jinja2-action@v1.1.0
        with:
          template: tmpl/deploy.j2
          output_file: k8s-specifications/configuration.yaml
          strict: true
          variables: |
            image_deploy_tag=sha-${{ env.sha_short }}

      - name: Configure git for the action
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Stash unstaged changes
        run: git stash --include-untracked

      - name: Pull latest changes from the remote branch
        run: git pull origin main --rebase

      - name: Apply stashed changes
        run: git stash pop || echo "No stashed changes to apply"

      - name: Commit deploy manifest on local repo
        run: |
          git add k8s-specifications/configuration.yaml
          git commit -s -m "[skip ci] Generate deployment manifests"

      - name: Push deploy manifests to remote repo
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main
